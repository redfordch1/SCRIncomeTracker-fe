{"ast":null,"code":"var _jsxFileName = \"/Users/chaseredford/SCRIncomeTracker/scrincometracker/src/components/ViewTotal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport TotalCard from \"./TotalCard\";\nimport \"../styles/viewTotal.css\";\nexport default function ViewTotal(props) {\n  const user_ID = localStorage.getItem(\"userID\");\n  const [user, setUser] = useState([]);\n  const [totals, setTotals] = useState([]);\n  var addedTotal;\n  var numbsArray = [];\n  var d = new Date().toLocaleString(\"en-US\", {\n    timeZone: \"America/Denver\"\n  });\n  const [form, setForm] = useState({\n    user_id: user_ID,\n    total_for_month: 0,\n    date: d\n  });\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/users/${user_ID}`).then(res => {\n      setUser(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [user_ID]);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/totals/${user_ID}`).then(res => {\n      setTotals(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [user_ID]);\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2\n  });\n  totals.map(numbs => {\n    var sum = 0;\n    numbsArray.push(numbs.total_for_day);\n    numbsArray.forEach(add);\n\n    function add(item) {\n      sum += item;\n      addedTotal = sum;\n    }\n  });\n\n  const updateAllTotals = () => {\n    axios.get(`http://localhost:5000/api/totals/${user_ID}`).then(res => {\n      setTotals(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deleteAllTotals = () => {\n    axios.delete(`http://localhost:5000/api/totals/${user_ID}`).then(res => {\n      console.log(res);\n      updateAllTotals();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const addMonthlyTotal = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:5000/api/month/\", form).then(res => {\n      console.log(res);\n      updateAllTotals();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  var formattedTotal = formatter.format(addedTotal);\n\n  if (!numbsArray.length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"parent_title_link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"user_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"Totals for \", user.username), /*#__PURE__*/React.createElement(Link, {\n      className: \"create_total_link\",\n      to: \"/CreateTotal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Create Total\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, totals.map(allTotals => {\n      console.log(\"This --> \", allTotals);\n      return /*#__PURE__*/React.createElement(TotalCard, {\n        key: allTotals.id,\n        totals: allTotals.total_for_day,\n        date: allTotals.date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"final_total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Need Totals to add!!!\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"parent_title_link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"user_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, \"Totals for \", user.username), /*#__PURE__*/React.createElement(Link, {\n      className: \"create_total_link\",\n      to: \"/CreateTotal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"Create Total\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"all_cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, totals.map(allTotals => {\n      return /*#__PURE__*/React.createElement(TotalCard, {\n        key: allTotals.id,\n        totals: allTotals.total_for_day,\n        date: allTotals.date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"final_total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \"Final Total: \", formattedTotal), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"secondaryButton\",\n      onClick: () => {\n        deleteAllTotals();\n      },\n      className: \"delete_button\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, \"Delete All Totals\"));\n  }\n}","map":{"version":3,"sources":["/Users/chaseredford/SCRIncomeTracker/scrincometracker/src/components/ViewTotal.js"],"names":["React","useState","useEffect","Link","axios","TotalCard","ViewTotal","props","user_ID","localStorage","getItem","user","setUser","totals","setTotals","addedTotal","numbsArray","d","Date","toLocaleString","timeZone","form","setForm","user_id","total_for_month","date","get","then","res","data","catch","err","console","log","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","map","numbs","sum","push","total_for_day","forEach","add","item","updateAllTotals","deleteAllTotals","delete","addMonthlyTotal","e","preventDefault","post","formattedTotal","format","length","username","allTotals","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport TotalCard from \"./TotalCard\";\nimport \"../styles/viewTotal.css\";\n\nexport default function ViewTotal(props) {\n  const user_ID = localStorage.getItem(\"userID\");\n  const [user, setUser] = useState([]);\n  const [totals, setTotals] = useState([]);\n  var addedTotal;\n  var numbsArray = [];\n  var d = new Date().toLocaleString(\"en-US\", { timeZone: \"America/Denver\" });\n  const [form, setForm] = useState({\n    user_id: user_ID,\n    total_for_month: 0,\n    date: d,\n  });\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/users/${user_ID}`)\n      .then((res) => {\n        setUser(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [user_ID]);\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/totals/${user_ID}`)\n      .then((res) => {\n        setTotals(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [user_ID]);\n\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2,\n  });\n\n  totals.map((numbs) => {\n    var sum = 0;\n    numbsArray.push(numbs.total_for_day);\n    numbsArray.forEach(add);\n\n    function add(item) {\n      sum += item;\n      addedTotal = sum;\n    }\n  });\n\n  const updateAllTotals = () => {\n    axios\n      .get(`http://localhost:5000/api/totals/${user_ID}`)\n      .then((res) => {\n        setTotals(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deleteAllTotals = () => {\n    axios\n      .delete(`http://localhost:5000/api/totals/${user_ID}`)\n      .then((res) => {\n        console.log(res);\n        updateAllTotals();\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const addMonthlyTotal = (e) => {\n    e.preventDefault();\n    axios\n      .post(\"http://localhost:5000/api/month/\", form)\n      .then((res) => {\n        console.log(res);\n        updateAllTotals();\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  var formattedTotal = formatter.format(addedTotal);\n\n  if (!numbsArray.length) {\n    return (\n      <div>\n        <div className=\"parent_title_link\">\n          <h2 className=\"user_title\">Totals for {user.username}</h2>\n          <Link className=\"create_total_link\" to=\"/CreateTotal\">\n            Create Total\n          </Link>\n          <div>\n            {totals.map((allTotals) => {\n              console.log(\"This --> \", allTotals);\n              return (\n                <TotalCard\n                  key={allTotals.id}\n                  totals={allTotals.total_for_day}\n                  date={allTotals.date}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <p className=\"final_total\">Need Totals to add!!!</p>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div className=\"parent_title_link\">\n          <h2 className=\"user_title\">Totals for {user.username}</h2>\n          <Link className=\"create_total_link\" to=\"/CreateTotal\">\n            Create Total\n          </Link>\n        </div>\n        <div className=\"all_cards\">\n          {totals.map((allTotals) => {\n            return (\n              <TotalCard\n                key={allTotals.id}\n                totals={allTotals.total_for_day}\n                date={allTotals.date}\n              />\n            );\n          })}\n        </div>\n        <p className=\"final_total\">Final Total: {formattedTotal}</p>\n        <button\n          id=\"secondaryButton\"\n          onClick={() => {\n            deleteAllTotals();\n          }}\n          className=\"delete_button\"\n          type=\"submit\"\n        >\n          Delete All Totals\n        </button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}