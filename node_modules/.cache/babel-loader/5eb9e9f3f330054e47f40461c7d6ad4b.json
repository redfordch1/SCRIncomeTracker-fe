{"ast":null,"code":"var _jsxFileName = \"/Users/chaseredford/SCRIncomeTracker/scrincometracker/src/components/Register.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Register() {\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n  const [form, setForm] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const onRegisterSubmit = form => {\n    axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/users/register`, form).then(res => {\n      console.log(res.data);\n      props.history.push(\"/Login\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  function handleChange(e) {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), errors.email && errors.email.message, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    ref: register({\n      validate: value => value !== \"admin\" || \"Nice try!\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), errors.username && errors.username.message, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/chaseredford/SCRIncomeTracker/scrincometracker/src/components/Register.js"],"names":["React","useState","useEffect","axios","useForm","Register","handleSubmit","register","errors","form","setForm","username","password","onRegisterSubmit","post","process","env","REACT_APP_BACKEND_URL","then","res","console","log","data","props","history","push","catch","err","handleChange","e","target","name","value","onSubmit","required","pattern","message","email","validate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCJ,OAAO,EAAlD;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC/BU,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAhC;;AAKA,QAAMC,gBAAgB,GAAIJ,IAAD,IAAU;AACjCN,IAAAA,KAAK,CACFW,IADH,CACS,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,qBAD7C,EACmER,IADnE,EAEGS,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAC,MAAAA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAS;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD,KARH;AASD,GAVD;;AAYA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBnB,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACoB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFpB,KAAD,CAAP;AAID;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAE1B,YAAY,CAAC2B,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,GAAG,EAAE1B,QAAQ,CAAC;AACZ2B,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,OAAO,EAAE;AACPH,QAAAA,KAAK,EAAE,0CADA;AAEPI,QAAAA,OAAO,EAAE;AAFF;AAFG,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWG5B,MAAM,CAAC6B,KAAP,IAAgB7B,MAAM,CAAC6B,KAAP,CAAaD,OAXhC,eAaE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAE7B,QAAQ,CAAC;AACZ+B,MAAAA,QAAQ,EAAGN,KAAD,IAAWA,KAAK,KAAK,OAAV,IAAqB;AAD9B,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAmBGxB,MAAM,CAACG,QAAP,IAAmBH,MAAM,CAACG,QAAP,CAAgByB,OAnBtC,eAqBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,CADF;AAyBD;;AAED,eAAe/B,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Register() {\n  const { handleSubmit, register, errors } = useForm();\n  const [form, setForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const onRegisterSubmit = (form) => {\n    axios\n      .post(`${process.env.REACT_APP_BACKEND_URL}/api/users/register`, form)\n      .then((res) => {\n        console.log(res.data);\n        props.history.push(\"/Login\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  function handleChange(e) {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input\n        name=\"email\"\n        ref={register({\n          required: \"Required\",\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n            message: \"invalid email address\",\n          },\n        })}\n      />\n      {errors.email && errors.email.message}\n\n      <input\n        name=\"username\"\n        ref={register({\n          validate: (value) => value !== \"admin\" || \"Nice try!\",\n        })}\n      />\n      {errors.username && errors.username.message}\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}