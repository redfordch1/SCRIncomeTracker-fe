{"ast":null,"code":"var _jsxFileName = \"/Users/chaseredford/SCRIncomeTracker/scrincometracker/src/components/MonthTotals.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport MonthTotalCard from \"./MonthTotalCard\";\nimport \"../styles/viewTotal.css\";\nexport default function MonthTotals(props) {\n  const user_ID = localStorage.getItem(\"userID\");\n  const [user, setUser] = useState([]);\n  const [monthTotals, setMonthTotals] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/users/${user_ID}`).then(res => {\n      setUser(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [user_ID]);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/month/${user_ID}`).then(res => {\n      console.log(res.data);\n      setMonthTotals(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [user_ID]);\n\n  if (!monthTotals.length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"month_parent_title_link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"user_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Totals for \", user.username), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, monthTotals.map(allTotals => {\n      console.log(\"This --> \", allTotals);\n      return /*#__PURE__*/React.createElement(MonthTotalCard, {\n        key: allTotals.id,\n        update: setMonthTotals,\n        totals: allTotals.total_for_month,\n        date: allTotals.date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"final_total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Need Totals to add!!!\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"month_parent_title_link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"user_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Monthly Totals for \", user.username)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"month_all_cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, monthTotals.map(allTotals => {\n      return /*#__PURE__*/React.createElement(MonthTotalCard, {\n        key: allTotals.id,\n        id: allTotals.id,\n        totals: allTotals.total_for_month,\n        date: allTotals.date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bottom_line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    })));\n  }\n}","map":{"version":3,"sources":["/Users/chaseredford/SCRIncomeTracker/scrincometracker/src/components/MonthTotals.js"],"names":["React","useState","useEffect","Link","axios","MonthTotalCard","MonthTotals","props","user_ID","localStorage","getItem","user","setUser","monthTotals","setMonthTotals","get","then","res","data","catch","err","console","log","length","username","map","allTotals","id","total_for_month","date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,yBAAP;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAhB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFW,GADH,CACQ,mCAAkCP,OAAQ,EADlD,EAEGQ,IAFH,CAESC,GAAD,IAAS;AACbL,MAAAA,OAAO,CAACK,GAAG,CAACC,IAAL,CAAP;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GATQ,EASN,CAACZ,OAAD,CATM,CAAT;AAWAN,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFW,GADH,CACQ,mCAAkCP,OAAQ,EADlD,EAEGQ,IAFH,CAESC,GAAD,IAAS;AACbI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAhB;AACAJ,MAAAA,cAAc,CAACG,GAAG,CAACC,IAAL,CAAd;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASD,GAVQ,EAUN,CAACZ,OAAD,CAVM,CAAT;;AAYA,MAAI,CAACK,WAAW,CAACU,MAAjB,EAAyB;AACvB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAuCZ,IAAI,CAACa,QAA5C,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,WAAW,CAACY,GAAZ,CAAiBC,SAAD,IAAe;AAC9BL,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBI,SAAzB;AACA,0BACE,oBAAC,cAAD;AACE,QAAA,GAAG,EAAEA,SAAS,CAACC,EADjB;AAEE,QAAA,MAAM,EAAEb,cAFV;AAGE,QAAA,MAAM,EAAEY,SAAS,CAACE,eAHpB;AAIE,QAAA,IAAI,EAAEF,SAAS,CAACG,IAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KAVA,CADH,CAFF,CADF,eAiBE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAjBF,CADF;AAqBD,GAtBD,MAsBO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA+ClB,IAAI,CAACa,QAApD,CADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,WAAW,CAACY,GAAZ,CAAiBC,SAAD,IAAe;AAC9B,0BACE,oBAAC,cAAD;AACE,QAAA,GAAG,EAAEA,SAAS,CAACC,EADjB;AAEE,QAAA,EAAE,EAAED,SAAS,CAACC,EAFhB;AAGE,QAAA,MAAM,EAAED,SAAS,CAACE,eAHpB;AAIE,QAAA,IAAI,EAAEF,SAAS,CAACG,IAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATA,CADH,eAWE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CAJF,CADF;AAoBD;AACF","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport MonthTotalCard from \"./MonthTotalCard\";\nimport \"../styles/viewTotal.css\";\n\nexport default function MonthTotals(props) {\n  const user_ID = localStorage.getItem(\"userID\");\n  const [user, setUser] = useState([]);\n  const [monthTotals, setMonthTotals] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/users/${user_ID}`)\n      .then((res) => {\n        setUser(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [user_ID]);\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/month/${user_ID}`)\n      .then((res) => {\n        console.log(res.data);\n        setMonthTotals(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [user_ID]);\n\n  if (!monthTotals.length) {\n    return (\n      <div>\n        <div className=\"month_parent_title_link\">\n          <h2 className=\"user_title\">Totals for {user.username}</h2>\n          <div>\n            {monthTotals.map((allTotals) => {\n              console.log(\"This --> \", allTotals);\n              return (\n                <MonthTotalCard\n                  key={allTotals.id}\n                  update={setMonthTotals}\n                  totals={allTotals.total_for_month}\n                  date={allTotals.date}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <p className=\"final_total\">Need Totals to add!!!</p>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div className=\"month_parent_title_link\">\n          <h2 className=\"user_title\">Monthly Totals for {user.username}</h2>\n        </div>\n        <div className=\"month_all_cards\">\n          {monthTotals.map((allTotals) => {\n            return (\n              <MonthTotalCard\n                key={allTotals.id}\n                id={allTotals.id}\n                totals={allTotals.total_for_month}\n                date={allTotals.date}\n              />\n            );\n          })}\n          <p className=\"bottom_line\"></p>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}