{"ast":null,"code":"var _jsxFileName = \"/Users/chaseredford/SCRIncomeTracker/scrincometracker/src/components/ViewTotal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport TotalCard from \"./TotalCard\";\nimport \"../styles/viewTotal.css\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nexport default function ViewTotal(props) {\n  const user_ID = localStorage.getItem(\"userID\");\n  const [user, setUser] = useState([]);\n  const [totals, setTotals] = useState([]);\n  var addedTotal;\n  var numbsArray = [];\n  var d = new Date().toLocaleString(\"en-US\", {\n    timeZone: \"America/Denver\"\n  });\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/users/${user_ID}`).then(res => {\n      setUser(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [user_ID]);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/totals/${user_ID}`).then(res => {\n      setTotals(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [user_ID]);\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2\n  });\n  totals.map(numbs => {\n    var sum = 0;\n    numbsArray.push(numbs.total_for_day);\n    numbsArray.forEach(add);\n\n    function add(item) {\n      sum += item;\n      addedTotal = sum;\n    }\n  });\n\n  const updateAllTotals = () => {\n    axios.get(`http://localhost:5000/api/totals/${user_ID}`).then(res => {\n      setTotals(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deleteAllTotals = () => {\n    axios.delete(`http://localhost:5000/api/totals/${user_ID}`).then(res => {\n      console.log(res);\n      updateAllTotals();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  var formattedTotal = formatter.format(addedTotal);\n  const form = {\n    user_id: user_ID,\n    total_for_month: formattedTotal,\n    date: d\n  };\n\n  const addMonthlyTotal = () => {\n    axios.post(\"http://localhost:5000/api/month\", form).then(res => {\n      props.history.push(\"/MonthTotals\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const submit = () => {\n    confirmAlert({\n      customUI: ({\n        onClose\n      }) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-ui\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }, \"Are you sure?\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }\n        }, \"You want to delete this file?\"), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: onClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }\n        }, \"No\"), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => {\n            onClose();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }\n        }, \"Yes, Delete it!\"));\n      }\n    });\n  }; //   confirmAlert({\n  //     title: \"Confirm to submit\",\n  //     message: \"Are you sure you want to delete all totals?\",\n  //     buttons: [\n  //       {\n  //         label: \"Yes\",\n  //         onClick: () => alert(\"Click Yes\"),\n  //       },\n  //       {\n  //         label: \"No\",\n  //         onClick: () => alert(\"Click No\"),\n  //       },\n  //     ],\n  //   });\n  // };\n\n\n  if (!numbsArray.length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"parent_title_link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"user_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \"Totals for \", user.username), /*#__PURE__*/React.createElement(Link, {\n      className: \"create_total_link\",\n      to: \"/CreateTotal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, \"Create Total\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, totals.map(allTotals => {\n      console.log(\"This --> \", allTotals);\n      return /*#__PURE__*/React.createElement(TotalCard, {\n        key: allTotals.id,\n        totals: allTotals.total_for_day,\n        date: allTotals.date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"final_total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, \"Need Totals to add!!!\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"parent_title_link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"user_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, \"Totals for \", user.username), /*#__PURE__*/React.createElement(Link, {\n      className: \"create_total_link\",\n      to: \"/CreateTotal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"Create Total\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"all_cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, totals.map(allTotals => {\n      return /*#__PURE__*/React.createElement(TotalCard, {\n        key: allTotals.id,\n        totals: allTotals.total_for_day,\n        date: allTotals.date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"final_total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, \"Final Total: \", formattedTotal), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button_parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        addMonthlyTotal();\n      },\n      className: \"final_total_button\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, \"Final Total For Month\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        submit();\n      },\n      className: \"delete_button\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }, \"Delete All Totals\")));\n  }\n}","map":{"version":3,"sources":["/Users/chaseredford/SCRIncomeTracker/scrincometracker/src/components/ViewTotal.js"],"names":["React","useState","useEffect","Link","axios","TotalCard","confirmAlert","ViewTotal","props","user_ID","localStorage","getItem","user","setUser","totals","setTotals","addedTotal","numbsArray","d","Date","toLocaleString","timeZone","get","then","res","data","catch","err","console","log","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","map","numbs","sum","push","total_for_day","forEach","add","item","updateAllTotals","deleteAllTotals","delete","formattedTotal","format","form","user_id","total_for_month","date","addMonthlyTotal","post","history","submit","customUI","onClose","length","username","allTotals","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,yBAAP;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAO,iDAAP;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAhB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIe,UAAJ;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,CAAC,GAAG,IAAIC,IAAJ,GAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAnC,CAAR;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFkB,GADH,CACQ,mCAAkCb,OAAQ,EADlD,EAEGc,IAFH,CAESC,GAAD,IAAS;AACbX,MAAAA,OAAO,CAACW,GAAG,CAACC,IAAL,CAAP;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GATQ,EASN,CAAClB,OAAD,CATM,CAAT;AAWAP,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFkB,GADH,CACQ,oCAAmCb,OAAQ,EADnD,EAEGc,IAFH,CAESC,GAAD,IAAS;AACbT,MAAAA,SAAS,CAACS,GAAG,CAACC,IAAL,CAAT;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GATQ,EASN,CAAClB,OAAD,CATM,CAAT;AAWA,QAAMqB,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC/CC,IAAAA,KAAK,EAAE,UADwC;AAE/CC,IAAAA,QAAQ,EAAE,KAFqC;AAG/CC,IAAAA,qBAAqB,EAAE;AAHwB,GAA/B,CAAlB;AAMArB,EAAAA,MAAM,CAACsB,GAAP,CAAYC,KAAD,IAAW;AACpB,QAAIC,GAAG,GAAG,CAAV;AACArB,IAAAA,UAAU,CAACsB,IAAX,CAAgBF,KAAK,CAACG,aAAtB;AACAvB,IAAAA,UAAU,CAACwB,OAAX,CAAmBC,GAAnB;;AAEA,aAASA,GAAT,CAAaC,IAAb,EAAmB;AACjBL,MAAAA,GAAG,IAAIK,IAAP;AACA3B,MAAAA,UAAU,GAAGsB,GAAb;AACD;AACF,GATD;;AAWA,QAAMM,eAAe,GAAG,MAAM;AAC5BxC,IAAAA,KAAK,CACFkB,GADH,CACQ,oCAAmCb,OAAQ,EADnD,EAEGc,IAFH,CAESC,GAAD,IAAS;AACbT,MAAAA,SAAS,CAACS,GAAG,CAACC,IAAL,CAAT;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GATD;;AAWA,QAAMkB,eAAe,GAAG,MAAM;AAC5BzC,IAAAA,KAAK,CACF0C,MADH,CACW,oCAAmCrC,OAAQ,EADtD,EAEGc,IAFH,CAESC,GAAD,IAAS;AACbI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAoB,MAAAA,eAAe;AAChB,KALH,EAOGlB,KAPH,CAOUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KATH;AAUD,GAXD;;AAaA,MAAIoB,cAAc,GAAGjB,SAAS,CAACkB,MAAV,CAAiBhC,UAAjB,CAArB;AAEA,QAAMiC,IAAI,GAAG;AACXC,IAAAA,OAAO,EAAEzC,OADE;AAEX0C,IAAAA,eAAe,EAAEJ,cAFN;AAGXK,IAAAA,IAAI,EAAElC;AAHK,GAAb;;AAMA,QAAMmC,eAAe,GAAG,MAAM;AAC5BjD,IAAAA,KAAK,CACFkD,IADH,CACQ,iCADR,EAC2CL,IAD3C,EAEG1B,IAFH,CAESC,GAAD,IAAS;AACbhB,MAAAA,KAAK,CAAC+C,OAAN,CAAchB,IAAd,CAAmB,cAAnB;AACD,KAJH,EAMGb,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASD,GAVD;;AAYA,QAAM6B,MAAM,GAAG,MAAM;AACnBlD,IAAAA,YAAY,CAAC;AACXmD,MAAAA,QAAQ,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAiB;AACzB,4BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFF,eAGE;AAAQ,UAAA,OAAO,EAAEA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AACE,UAAA,OAAO,EAAE,MAAM;AACbA,YAAAA,OAAO;AACR,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,CADF;AAcD;AAhBU,KAAD,CAAZ;AAkBD,GAnBD,CA3FuC,CA+GvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAI,CAACzC,UAAU,CAAC0C,MAAhB,EAAwB;AACtB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAuC/C,IAAI,CAACgD,QAA5C,CADF,eAEE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAoC,MAAA,EAAE,EAAC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG9C,MAAM,CAACsB,GAAP,CAAYyB,SAAD,IAAe;AACzBjC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBgC,SAAzB;AACA,0BACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEA,SAAS,CAACC,EADjB;AAEE,QAAA,MAAM,EAAED,SAAS,CAACrB,aAFpB;AAGE,QAAA,IAAI,EAAEqB,SAAS,CAACT,IAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KATA,CADH,CALF,CADF,eAmBE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAnBF,CADF;AAuBD,GAxBD,MAwBO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAuCxC,IAAI,CAACgD,QAA5C,CADF,eAEE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAoC,MAAA,EAAE,EAAC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF,eAOE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG9C,MAAM,CAACsB,GAAP,CAAYyB,SAAD,IAAe;AACzB,0BACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEA,SAAS,CAACC,EADjB;AAEE,QAAA,MAAM,EAAED,SAAS,CAACrB,aAFpB;AAGE,QAAA,IAAI,EAAEqB,SAAS,CAACT,IAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARA,CADH,CAPF,eAkBE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAyCL,cAAzC,CAlBF,eAmBE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE,MAAM;AACbM,QAAAA,eAAe;AAChB,OAHH;AAIE,MAAA,SAAS,EAAC,oBAJZ;AAKE,MAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAUE;AACE,MAAA,OAAO,EAAE,MAAM;AACbG,QAAAA,MAAM;AACP,OAHH;AAIE,MAAA,SAAS,EAAC,eAJZ;AAKE,MAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVF,CAnBF,CADF;AA0CD;AACF","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport TotalCard from \"./TotalCard\";\nimport \"../styles/viewTotal.css\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nexport default function ViewTotal(props) {\n  const user_ID = localStorage.getItem(\"userID\");\n  const [user, setUser] = useState([]);\n  const [totals, setTotals] = useState([]);\n  var addedTotal;\n  var numbsArray = [];\n  var d = new Date().toLocaleString(\"en-US\", { timeZone: \"America/Denver\" });\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/users/${user_ID}`)\n      .then((res) => {\n        setUser(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [user_ID]);\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/totals/${user_ID}`)\n      .then((res) => {\n        setTotals(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [user_ID]);\n\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2,\n  });\n\n  totals.map((numbs) => {\n    var sum = 0;\n    numbsArray.push(numbs.total_for_day);\n    numbsArray.forEach(add);\n\n    function add(item) {\n      sum += item;\n      addedTotal = sum;\n    }\n  });\n\n  const updateAllTotals = () => {\n    axios\n      .get(`http://localhost:5000/api/totals/${user_ID}`)\n      .then((res) => {\n        setTotals(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deleteAllTotals = () => {\n    axios\n      .delete(`http://localhost:5000/api/totals/${user_ID}`)\n      .then((res) => {\n        console.log(res);\n        updateAllTotals();\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  var formattedTotal = formatter.format(addedTotal);\n\n  const form = {\n    user_id: user_ID,\n    total_for_month: formattedTotal,\n    date: d,\n  };\n\n  const addMonthlyTotal = () => {\n    axios\n      .post(\"http://localhost:5000/api/month\", form)\n      .then((res) => {\n        props.history.push(\"/MonthTotals\");\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const submit = () => {\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className=\"custom-ui\">\n            <h1>Are you sure?</h1>\n            <p>You want to delete this file?</p>\n            <button onClick={onClose}>No</button>\n            <button\n              onClick={() => {\n                onClose();\n              }}\n            >\n              Yes, Delete it!\n            </button>\n          </div>\n        );\n      },\n    });\n  };\n  //   confirmAlert({\n  //     title: \"Confirm to submit\",\n  //     message: \"Are you sure you want to delete all totals?\",\n  //     buttons: [\n  //       {\n  //         label: \"Yes\",\n  //         onClick: () => alert(\"Click Yes\"),\n  //       },\n  //       {\n  //         label: \"No\",\n  //         onClick: () => alert(\"Click No\"),\n  //       },\n  //     ],\n  //   });\n  // };\n\n  if (!numbsArray.length) {\n    return (\n      <div>\n        <div className=\"parent_title_link\">\n          <h2 className=\"user_title\">Totals for {user.username}</h2>\n          <Link className=\"create_total_link\" to=\"/CreateTotal\">\n            Create Total\n          </Link>\n          <div>\n            {totals.map((allTotals) => {\n              console.log(\"This --> \", allTotals);\n              return (\n                <TotalCard\n                  key={allTotals.id}\n                  totals={allTotals.total_for_day}\n                  date={allTotals.date}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <p className=\"final_total\">Need Totals to add!!!</p>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div className=\"parent_title_link\">\n          <h2 className=\"user_title\">Totals for {user.username}</h2>\n          <Link className=\"create_total_link\" to=\"/CreateTotal\">\n            Create Total\n          </Link>\n        </div>\n        <div className=\"all_cards\">\n          {totals.map((allTotals) => {\n            return (\n              <TotalCard\n                key={allTotals.id}\n                totals={allTotals.total_for_day}\n                date={allTotals.date}\n              />\n            );\n          })}\n        </div>\n        <p className=\"final_total\">Final Total: {formattedTotal}</p>\n        <div className=\"button_parent\">\n          <button\n            onClick={() => {\n              addMonthlyTotal();\n            }}\n            className=\"final_total_button\"\n            type=\"submit\"\n          >\n            Final Total For Month\n          </button>\n          <button\n            onClick={() => {\n              submit();\n            }}\n            className=\"delete_button\"\n            type=\"submit\"\n          >\n            Delete All Totals\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}